#!/usr/bin/python3
import json
from PIL import Image, ImageDraw, ImageFont

outputname = "meme.png"

font_path = "font/Envy.ttf"
font_size = 50
font_width = 27
font_height = 51
font = ImageFont.truetype(font_path,font_size)

imgpath = "img/drake_800x800.png"
fn = "img/drake_800x800.json"

data = open(fn).read()
data = json.loads(data)

ta = data['text_areas']

message = ["hello","long message tha will not fit on a single line"]

class TextArea:
    def __init__(self, textAreaData, message):
        self.x1 = textAreaData[0] + 10
        self.y1 = textAreaData[1] + 10
        self.x2 = textAreaData[2] - 10
        self.y2 = textAreaData[3] - 10
        self.message = message

    def maxCharPerLine(self):
        return int((self.x2 - self.x1) / font_width)

    def setx(self):
        return self.x1

    def sety(self):
        return self.y1

    def getText(self):
        limit = self.maxCharPerLine()
        tsplit = self.message.split()
        l = 0
        t = [""]
        text = ""
        for i, w in enumerate(tsplit):
            if ((len(t[l]) + len(w)) < limit + 1):
                t[l] = t[l] + w + " "
            else:
                t[l] = t[l] + "\n"
                l = l + 1
                t.append(w + " ")

        for i in t:
            text = text + i
        self.line_amount = l

        return text

image = Image.open(imgpath)
draw = ImageDraw.Draw(image)

def drawText(m, textAreaData):
    textArea = TextArea(textAreaData, m)
    draw.text(
        xy=(textArea.setx(),textArea.sety()),
        text=textArea.getText(),
        fill=(0,0,0),font=font)

for i, a in enumerate(ta):
    m = message[i]
    drawText(m,a)

image.save(outputname)
